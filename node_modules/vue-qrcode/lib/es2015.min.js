import t from"qrcode";
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */const e=["low","medium","quartile","high","L","M","Q","H"],r=[0,1,2,3,4,5,6,7],a=["alphanumeric","numeric","kanji","byte"],i=["image/png","image/jpeg","image/webp"];var n={props:{version:{type:Number,validator:t=>t===parseInt(String(t),10)&&t>=1&&t<=40},errorCorrectionLevel:{type:String,validator:t=>e.includes(t)},maskPattern:{type:Number,validator:t=>r.includes(t)},toSJISFunc:Function,margin:Number,scale:Number,width:Number,color:{type:Object,validator:t=>["dark","light"].every(e=>["string","undefined"].includes(typeof t[e]))},type:{type:String,validator:t=>i.includes(t)},quality:{type:Number,validator:t=>t===parseFloat(String(t))&&t>=0&&t<=1},value:{type:[String,Array],required:!0,validator:t=>"string"==typeof t||t.every(({data:t,mode:e})=>"string"==typeof t&&(null==e||a.includes(e)))}},data:()=>({dataUrl:""}),watch:{$props:{deep:!0,immediate:!0,handler:"toDataURL"}},methods:{toDataURL(){const e=this.$props,{quality:r}=e,a=function(t,e){var r={};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&e.indexOf(a)<0&&(r[a]=t[a]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(a=Object.getOwnPropertySymbols(t);i<a.length;i++)e.indexOf(a[i])<0&&Object.prototype.propertyIsEnumerable.call(t,a[i])&&(r[a[i]]=t[a[i]])}return r}(e,["quality"]);return t.toDataURL(this.value,Object.assign(a,null==r||{renderOptions:{quality:r}})).then(t=>this.dataUrl=t)}},render(){return this.$createElement("img",{domProps:Object.assign(Object.assign({},this.$attrs),{src:this.dataUrl})})}};export default n;export{e as LEVELS,r as MASK_PATTERNS,a as MODES,i as TYPES};
